package com.example.user.models;

import lombok.NoArgsConstructor;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.CachePut;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.stereotype.Component;

@Component
@NoArgsConstructor
public class SessionManager {
    @CachePut(value = "user_session", key = "#userSession.userDTO.email")
    public UserSession createSession(UserSession userSession) {
        return userSession;
    }

    @Cacheable(value = "user_session", key = "#email")
    public UserSession getSession(String email) {
        throw new IllegalStateException("Session not found or expired");
    }

    public boolean validateSession(String email, String token) {
        UserSession session = getSession(email);
        return (
                session != null &&
                        session.getToken().equals(token) &&
                        !session.isExpired()
        );
    }

    @CacheEvict(value = "user_session", key = "#email")
    public void removeSession(String email) {
    }
}
